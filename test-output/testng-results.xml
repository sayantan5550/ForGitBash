<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="16" total="21" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-07T21:05:35 IST" name="Suite" finished-at="2023-02-07T21:06:35 IST" duration-ms="60065">
    <groups>
    </groups>
    <test started-at="2023-02-07T21:05:35 IST" name="Test" finished-at="2023-02-07T21:06:35 IST" duration-ms="60065">
      <class name="Campaign.CreateCampaignTest">
        <test-method is-config="true" signature="BC()[pri:0, instance:Campaign.CreateCampaignTest@7fa98a66]" started-at="2023-02-07T21:05:48 IST" name="BC" finished-at="2023-02-07T21:05:49 IST" duration-ms="804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC -->
        <test-method is-config="true" signature="BM()[pri:0, instance:Campaign.CreateCampaignTest@7fa98a66]" started-at="2023-02-07T21:05:49 IST" name="BM" finished-at="2023-02-07T21:05:51 IST" duration-ms="1996" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="createCamp()[pri:0, instance:Campaign.CreateCampaignTest@7fa98a66]" started-at="2023-02-07T21:05:51 IST" name="createCamp" finished-at="2023-02-07T21:05:55 IST" duration-ms="4744" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCamp -->
        <test-method is-config="true" signature="AM()[pri:0, instance:Campaign.CreateCampaignTest@7fa98a66]" started-at="2023-02-07T21:05:55 IST" name="AM" finished-at="2023-02-07T21:05:59 IST" duration-ms="3313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="AC()[pri:0, instance:Campaign.CreateCampaignTest@7fa98a66]" started-at="2023-02-07T21:05:59 IST" name="AC" finished-at="2023-02-07T21:05:59 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC -->
      </class> <!-- Campaign.CreateCampaignTest -->
      <class name="Campaign.CreateCampaignWithProductTest">
        <test-method is-config="true" signature="BC()[pri:0, instance:Campaign.CreateCampaignWithProductTest@15ff3e9e]" started-at="2023-02-07T21:05:59 IST" name="BC" finished-at="2023-02-07T21:05:59 IST" duration-ms="761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC -->
        <test-method is-config="true" signature="BM()[pri:0, instance:Campaign.CreateCampaignWithProductTest@15ff3e9e]" started-at="2023-02-07T21:05:59 IST" name="BM" finished-at="2023-02-07T21:06:01 IST" duration-ms="1986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="campWithProd()[pri:0, instance:Campaign.CreateCampaignWithProductTest@15ff3e9e]" started-at="2023-02-07T21:06:01 IST" name="campWithProd" finished-at="2023-02-07T21:06:13 IST" duration-ms="11843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- campWithProd -->
        <test-method is-config="true" signature="AM()[pri:0, instance:Campaign.CreateCampaignWithProductTest@15ff3e9e]" started-at="2023-02-07T21:06:13 IST" name="AM" finished-at="2023-02-07T21:06:17 IST" duration-ms="3359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="AC()[pri:0, instance:Campaign.CreateCampaignWithProductTest@15ff3e9e]" started-at="2023-02-07T21:06:17 IST" name="AC" finished-at="2023-02-07T21:06:17 IST" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC -->
      </class> <!-- Campaign.CreateCampaignWithProductTest -->
      <class name="Organization.CreateOrganizationTest">
        <test-method is-config="true" signature="BC()[pri:0, instance:Organization.CreateOrganizationTest@6dc17b83]" started-at="2023-02-07T21:06:17 IST" name="BC" finished-at="2023-02-07T21:06:18 IST" duration-ms="748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC -->
        <test-method signature="createOrg()[pri:0, instance:Organization.CreateOrganizationTest@6dc17b83]" started-at="2023-02-07T21:06:18 IST" name="createOrg" finished-at="2023-02-07T21:06:24 IST" duration-ms="6022" status="FAIL">
          <exception class="org.openqa.selenium.UnhandledAlertException">
            <message>
              <![CDATA[unexpected alert open: {Alert text : Organization Name Already Exists!}
  (Session info: chrome=109.0.5414.120): Organization Name Already Exists!
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-9F9GKHEN', ip: '192.168.1.4', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 109.0.5414.120, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\91910\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59892}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e076adcff0411a5e7d3bf7694425c056]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.UnhandledAlertException: unexpected alert open: {Alert text : Organization Name Already Exists!}
  (Session info: chrome=109.0.5414.120): Organization Name Already Exists!
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-9F9GKHEN', ip: '192.168.1.4', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 109.0.5414.120, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\91910\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59892}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e076adcff0411a5e7d3bf7694425c056
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:120)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
at jdk.proxy2/jdk.proxy2.$Proxy21.getScreenshotAs(Unknown Source)
at org.openqa.selenium.support.events.EventFiringWebDriver.getScreenshotAs(EventFiringWebDriver.java:302)
at Generic_Utility.ListenersClass.onTestFailure(ListenersClass.java:34)
at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:96)
at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:219)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:656)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.UnhandledAlertException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrg -->
        <test-method is-config="true" signature="BM()[pri:0, instance:Organization.CreateOrganizationTest@6dc17b83]" started-at="2023-02-07T21:06:18 IST" name="BM" finished-at="2023-02-07T21:06:20 IST" duration-ms="2041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method is-config="true" signature="AC()[pri:0, instance:Organization.CreateOrganizationTest@6dc17b83]" started-at="2023-02-07T21:06:24 IST" name="AC" finished-at="2023-02-07T21:06:24 IST" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC -->
      </class> <!-- Organization.CreateOrganizationTest -->
      <class name="Product.CreateProductTest">
        <test-method is-config="true" signature="BS()[pri:0, instance:Product.CreateProductTest@7334aada]" started-at="2023-02-07T21:05:35 IST" name="BS" finished-at="2023-02-07T21:05:35 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BS -->
        <test-method is-config="true" signature="BT()[pri:0, instance:Product.CreateProductTest@7334aada]" started-at="2023-02-07T21:05:35 IST" name="BT" finished-at="2023-02-07T21:05:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BT -->
        <test-method is-config="true" signature="BC()[pri:0, instance:Product.CreateProductTest@7334aada]" started-at="2023-02-07T21:05:35 IST" name="BC" finished-at="2023-02-07T21:05:37 IST" duration-ms="1439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC -->
        <test-method is-config="true" signature="BM()[pri:0, instance:Product.CreateProductTest@7334aada]" started-at="2023-02-07T21:05:37 IST" name="BM" finished-at="2023-02-07T21:05:39 IST" duration-ms="2032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="createProd()[pri:0, instance:Product.CreateProductTest@7334aada]" started-at="2023-02-07T21:05:39 IST" name="createProd" finished-at="2023-02-07T21:05:44 IST" duration-ms="5414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProd -->
        <test-method is-config="true" signature="AM()[pri:0, instance:Product.CreateProductTest@7334aada]" started-at="2023-02-07T21:05:44 IST" name="AM" finished-at="2023-02-07T21:05:48 IST" duration-ms="3310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="AC()[pri:0, instance:Product.CreateProductTest@7334aada]" started-at="2023-02-07T21:05:48 IST" name="AC" finished-at="2023-02-07T21:05:48 IST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC -->
        <test-method is-config="true" signature="AT()[pri:0, instance:Product.CreateProductTest@7334aada]" started-at="2023-02-07T21:06:35 IST" name="AT" finished-at="2023-02-07T21:06:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AT -->
        <test-method is-config="true" signature="AS()[pri:0, instance:Product.CreateProductTest@7334aada]" started-at="2023-02-07T21:06:35 IST" name="AS" finished-at="2023-02-07T21:06:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AS -->
      </class> <!-- Product.CreateProductTest -->
      <class name="Product.CreateProductAndDeleteTest">
        <test-method is-config="true" signature="BC()[pri:0, instance:Product.CreateProductAndDeleteTest@5e0826e7]" started-at="2023-02-07T21:06:24 IST" name="BC" finished-at="2023-02-07T21:06:25 IST" duration-ms="808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC -->
        <test-method is-config="true" signature="BM()[pri:0, instance:Product.CreateProductAndDeleteTest@5e0826e7]" started-at="2023-02-07T21:06:25 IST" name="BM" finished-at="2023-02-07T21:06:27 IST" duration-ms="2003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="prodAndDelete()[pri:0, instance:Product.CreateProductAndDeleteTest@5e0826e7]" started-at="2023-02-07T21:06:27 IST" name="prodAndDelete" finished-at="2023-02-07T21:06:32 IST" duration-ms="4920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prodAndDelete -->
        <test-method is-config="true" signature="AM()[pri:0, instance:Product.CreateProductAndDeleteTest@5e0826e7]" started-at="2023-02-07T21:06:32 IST" name="AM" finished-at="2023-02-07T21:06:35 IST" duration-ms="3641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="AC()[pri:0, instance:Product.CreateProductAndDeleteTest@5e0826e7]" started-at="2023-02-07T21:06:35 IST" name="AC" finished-at="2023-02-07T21:06:35 IST" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC -->
      </class> <!-- Product.CreateProductAndDeleteTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
