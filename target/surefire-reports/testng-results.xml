<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-31T20:48:06 IST" name="Organization.CreateOrganizationTest" finished-at="2023-01-31T20:48:27 IST" duration-ms="21660">
    <groups>
    </groups>
    <test started-at="2023-01-31T20:48:06 IST" name="Command line test" finished-at="2023-01-31T20:48:27 IST" duration-ms="21660">
      <class name="Organization.CreateOrganizationTest">
        <test-method is-config="true" signature="BS()[pri:0, instance:Organization.CreateOrganizationTest@510f3d34]" started-at="2023-01-31T20:48:06 IST" name="BS" finished-at="2023-01-31T20:48:06 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BS -->
        <test-method is-config="true" signature="BT()[pri:0, instance:Organization.CreateOrganizationTest@510f3d34]" started-at="2023-01-31T20:48:06 IST" name="BT" finished-at="2023-01-31T20:48:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BT -->
        <test-method is-config="true" signature="BC()[pri:0, instance:Organization.CreateOrganizationTest@510f3d34]" started-at="2023-01-31T20:48:06 IST" name="BC" finished-at="2023-01-31T20:48:07 IST" duration-ms="1578" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC -->
        <test-method is-config="true" signature="BM()[pri:0, instance:Organization.CreateOrganizationTest@510f3d34]" started-at="2023-01-31T20:48:07 IST" name="BM" finished-at="2023-01-31T20:48:10 IST" duration-ms="2294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="createOrg()[pri:0, instance:Organization.CreateOrganizationTest@510f3d34]" started-at="2023-01-31T20:48:10 IST" name="createOrg" finished-at="2023-01-31T20:48:23 IST" duration-ms="13755" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [organization name] but found [TestYantra376]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [organization name] but found [TestYantra376]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at Object_Repo.ValidationAndVerificationPage.validateOrganization(ValidationAndVerificationPage.java:46)
at Organization.CreateOrganizationTest.createOrg(CreateOrganizationTest.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrg -->
        <test-method is-config="true" signature="AM()[pri:0, instance:Organization.CreateOrganizationTest@510f3d34]" started-at="2023-01-31T20:48:23 IST" name="AM" finished-at="2023-01-31T20:48:27 IST" duration-ms="3660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="AC()[pri:0, instance:Organization.CreateOrganizationTest@510f3d34]" started-at="2023-01-31T20:48:27 IST" name="AC" finished-at="2023-01-31T20:48:27 IST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC -->
        <test-method is-config="true" signature="AT()[pri:0, instance:Organization.CreateOrganizationTest@510f3d34]" started-at="2023-01-31T20:48:27 IST" name="AT" finished-at="2023-01-31T20:48:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AT -->
        <test-method is-config="true" signature="AS()[pri:0, instance:Organization.CreateOrganizationTest@510f3d34]" started-at="2023-01-31T20:48:27 IST" name="AS" finished-at="2023-01-31T20:48:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AS -->
      </class> <!-- Organization.CreateOrganizationTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Organization.CreateOrganizationTest -->
</testng-results>
